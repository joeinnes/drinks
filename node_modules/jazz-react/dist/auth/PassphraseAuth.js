import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { usePassphraseAuth } from "jazz-react-core";
import { useState } from "react";
export function PassphraseAuthBasicUI(props) {
    const auth = usePassphraseAuth({
        wordlist: props.wordlist,
    });
    const [step, setStep] = useState("initial");
    const [loginPassphrase, setLoginPassphrase] = useState("");
    const [isCopied, setIsCopied] = useState(false);
    if (auth.state === "signedIn") {
        return props.children ?? null;
    }
    const handleCreateAccount = async () => {
        setStep("create");
    };
    const handleLogin = () => {
        setStep("login");
    };
    const handleBack = () => {
        setStep("initial");
        setLoginPassphrase("");
    };
    const handleCopy = async () => {
        await navigator.clipboard.writeText(auth.passphrase);
        setIsCopied(true);
    };
    const handleLoginSubmit = async () => {
        await auth.logIn(loginPassphrase); // Sets the state to signed in
        // Reset the state in case of logout
        setStep("initial");
        setLoginPassphrase("");
    };
    const handleNext = async () => {
        await auth.signUp(); // Sets the state to signed in
        // Reset the state in case of logout
        setStep("initial");
        setLoginPassphrase("");
    };
    return (_jsx("div", { style: containerStyle, children: _jsxs("div", { style: cardStyle, children: [step === "initial" && (_jsxs("div", { children: [_jsx("h1", { style: headingStyle, children: props.appName }), _jsx("button", { onClick: handleCreateAccount, style: primaryButtonStyle, children: "Create new account" }), _jsx("button", { onClick: handleLogin, style: secondaryButtonStyle, children: "Log in" })] })), step === "create" && (_jsxs(_Fragment, { children: [_jsx("h1", { style: headingStyle, children: "Your Passphrase" }), _jsx("p", { style: {
                                fontSize: "0.875rem",
                                color: "#4b5563",
                                textAlign: "center",
                                marginBottom: "1rem",
                            }, children: "Please copy and store this passphrase somewhere safe. You'll need it to log in." }), _jsx("textarea", { readOnly: true, value: auth.passphrase, style: textareaStyle, rows: 5 }), _jsxs("div", { style: {
                                display: "flex",
                                justifyContent: "space-between",
                                gap: "1rem",
                            }, children: [_jsx("button", { onClick: handleBack, style: secondaryButtonStyle, children: "Back" }), _jsx("button", { onClick: handleCopy, style: primaryButtonStyle, children: isCopied ? "Copied!" : "Copy Passphrase" }), _jsx("button", { onClick: handleNext, style: primaryButtonStyle, children: "I have saved it!" })] })] })), step === "login" && (_jsxs("div", { children: [_jsx("h1", { style: headingStyle, children: "Log In" }), _jsx("textarea", { value: loginPassphrase, onChange: (e) => setLoginPassphrase(e.target.value), placeholder: "Enter your passphrase", style: textareaStyle, rows: 5 }), _jsxs("div", { style: {
                                display: "flex",
                                justifyContent: "space-between",
                                gap: "1rem",
                            }, children: [_jsx("button", { onClick: handleBack, style: secondaryButtonStyle, children: "Back" }), _jsx("button", { onClick: handleLoginSubmit, style: primaryButtonStyle, children: "Log In" })] })] }))] }) }));
}
const containerStyle = {
    minHeight: "100vh",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "#f3f4f6",
};
const cardStyle = {
    backgroundColor: "white",
    padding: "2rem",
    borderRadius: "0.5rem",
    boxShadow: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
    width: "24rem",
};
const buttonStyle = {
    width: "100%",
    padding: "0.5rem 1rem",
    borderRadius: "0.25rem",
    fontWeight: "bold",
    cursor: "pointer",
    marginBottom: "1rem",
};
const primaryButtonStyle = {
    ...buttonStyle,
    backgroundColor: "black",
    color: "white",
    border: "none",
};
const secondaryButtonStyle = {
    ...buttonStyle,
    backgroundColor: "white",
    color: "black",
    border: "1px solid black",
};
const headingStyle = {
    color: "black",
    fontSize: "1.5rem",
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: "1rem",
};
const textareaStyle = {
    width: "100%",
    padding: "0.5rem",
    border: "1px solid #d1d5db",
    borderRadius: "0.25rem",
    marginBottom: "1rem",
    boxSizing: "border-box",
};
//# sourceMappingURL=PassphraseAuth.js.map