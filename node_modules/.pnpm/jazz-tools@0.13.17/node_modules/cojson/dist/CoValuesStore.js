import { CoValueState } from "./coValueState.js";
export class CoValuesStore {
    constructor() {
        this.coValues = new Map();
    }
    get(id) {
        let entry = this.coValues.get(id);
        if (!entry) {
            entry = new CoValueState(id);
            this.coValues.set(id, entry);
        }
        return entry;
    }
    markAsAvailable(id, coValue, fromPeerId) {
        const entry = this.get(id);
        entry.markAvailable(coValue, fromPeerId);
    }
    internalMarkMagicallyAvailable(id, coValue) {
        const entry = this.get(id);
        entry.internalMarkMagicallyAvailable(coValue);
    }
    getEntries() {
        return this.coValues.entries();
    }
    getValues() {
        return this.coValues.values();
    }
    getKeys() {
        return this.coValues.keys();
    }
}
//# sourceMappingURL=CoValuesStore.js.map