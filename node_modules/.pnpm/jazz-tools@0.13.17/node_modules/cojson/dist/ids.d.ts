import { CoID } from "./coValue.js";
import { RawAccountID } from "./coValues/account.js";
import { RawGroup } from "./exports.js";
export type RawCoID = `co_z${string}`;
export type ParentGroupReference = `parent_${CoID<RawGroup>}`;
export type ChildGroupReference = `child_${CoID<RawGroup>}`;
export declare function isRawCoID(id: unknown): id is RawCoID;
export declare function rawCoIDtoBytes(id: RawCoID): Uint8Array;
export declare function rawCoIDfromBytes(bytes: Uint8Array): RawCoID;
export type TransactionID = {
    sessionID: SessionID;
    txIndex: number;
};
export type AgentID = `sealer_z${string}/signer_z${string}`;
export declare function isAgentID(id: string): id is AgentID;
export type SessionID = `${RawAccountID | AgentID}_session_z${string}`;
export declare function isParentGroupReference(key: string): key is ParentGroupReference;
export declare function getParentGroupId(key: ParentGroupReference): CoID<RawGroup>;
export declare function isChildGroupReference(key: string): key is ChildGroupReference;
export declare function getChildGroupId(key: ChildGroupReference): CoID<RawGroup>;
export declare function getGroupDependentKey(key: unknown): `co_z${string}` | undefined;
export declare function getGroupDependentKeyList(keys: unknown[]): `co_z${string}`[];
//# sourceMappingURL=ids.d.ts.map