'use strict';

var jazz_crypto_rs = require('../wasm/pkg/jazz_crypto_rs.cjs');
var jazz_crypto_rs_wasm = require('../wasm/pkg/jazz_crypto_rs.wasm.cjs');

let output = undefined;
async function initialize() {
    return (output ??= await jazz_crypto_rs.default({ module_or_path: jazz_crypto_rs_wasm.data }));
}

exports.Blake3Hasher = jazz_crypto_rs.Blake3Hasher;
exports.blake3_digest_for_state = jazz_crypto_rs.blake3_digest_for_state;
exports.blake3_empty_state = jazz_crypto_rs.blake3_empty_state;
exports.blake3_hash_once = jazz_crypto_rs.blake3_hash_once;
exports.blake3_hash_once_with_context = jazz_crypto_rs.blake3_hash_once_with_context;
exports.blake3_update_state = jazz_crypto_rs.blake3_update_state;
exports.decrypt = jazz_crypto_rs.decrypt;
exports.decrypt_xsalsa20 = jazz_crypto_rs.decrypt_xsalsa20;
exports.ed25519_sign = jazz_crypto_rs.ed25519_sign;
exports.ed25519_signature_from_bytes = jazz_crypto_rs.ed25519_signature_from_bytes;
exports.ed25519_signing_key_from_bytes = jazz_crypto_rs.ed25519_signing_key_from_bytes;
exports.ed25519_signing_key_sign = jazz_crypto_rs.ed25519_signing_key_sign;
exports.ed25519_signing_key_to_public = jazz_crypto_rs.ed25519_signing_key_to_public;
exports.ed25519_verify = jazz_crypto_rs.ed25519_verify;
exports.ed25519_verifying_key = jazz_crypto_rs.ed25519_verifying_key;
exports.ed25519_verifying_key_from_bytes = jazz_crypto_rs.ed25519_verifying_key_from_bytes;
exports.encrypt = jazz_crypto_rs.encrypt;
exports.encrypt_xsalsa20 = jazz_crypto_rs.encrypt_xsalsa20;
exports.generate_nonce = jazz_crypto_rs.generate_nonce;
exports.get_sealer_id = jazz_crypto_rs.get_sealer_id;
exports.get_signer_id = jazz_crypto_rs.get_signer_id;
exports.initSync = jazz_crypto_rs.initSync;
exports.new_ed25519_signing_key = jazz_crypto_rs.new_ed25519_signing_key;
exports.new_x25519_private_key = jazz_crypto_rs.new_x25519_private_key;
exports.seal = jazz_crypto_rs.seal;
exports.sign = jazz_crypto_rs.sign;
exports.start = jazz_crypto_rs.start;
exports.unseal = jazz_crypto_rs.unseal;
exports.verify = jazz_crypto_rs.verify;
exports.x25519_diffie_hellman = jazz_crypto_rs.x25519_diffie_hellman;
exports.x25519_public_key = jazz_crypto_rs.x25519_public_key;
exports.initialize = initialize;
//# sourceMappingURL=index.cjs.map
