import { logger } from "cojson";
export function getErrorMessage(error) {
    return error instanceof Error ? error.message : "Unknown error";
}
export function addMessageToBacklog(backlog, message) {
    if (!backlog) {
        return JSON.stringify(message);
    }
    return `${backlog}\n${JSON.stringify(message)}`;
}
export function deserializeMessages(messages) {
    if (typeof messages !== "string") {
        return {
            ok: false,
            error: new Error("Expected a string"),
        };
    }
    try {
        return {
            ok: true,
            messages: messages.split("\n").map((msg) => JSON.parse(msg)),
        };
    }
    catch (e) {
        logger.error("Error while deserializing messages", { err: e });
        return {
            ok: false,
            error: e,
        };
    }
}
//# sourceMappingURL=serialization.js.map