import { type InviteSecret } from "cojson";
import { Account } from "../coValues/account.js";
import type { CoValue, CoValueClass, ID } from "../internal.js";
/** @category Invite Links */
export declare function createInviteLink<C extends CoValue>(value: C, role: "reader" | "writer" | "admin" | "writeOnly", baseURL: string, valueHint?: string): string;
/** @category Invite Links */
export declare function parseInviteLink<C extends CoValue>(inviteURL: string): {
    valueID: ID<C>;
    valueHint?: string;
    inviteSecret: InviteSecret;
} | undefined;
/** @category Invite Links */
export declare function consumeInviteLink<V extends CoValue>({ inviteURL, as, forValueHint, invitedObjectSchema, }: {
    inviteURL: string;
    as?: Account;
    forValueHint?: string;
    invitedObjectSchema: CoValueClass<V>;
}): Promise<{
    valueID: ID<V>;
    valueHint?: string;
    inviteSecret: InviteSecret;
} | undefined>;
//# sourceMappingURL=invites.d.ts.map